This is a workflow to get the nt domains of interest based on a pfam hmmsearch

# 1) move into a directory to work in
`cd /home/folder/nucleotide_binding/cDNS_files`

#make one nt fasta with all nt seq in it
`cat *.fa > all_nt.fasta`
 
#convert the nt fasta file into amino acids

# 2) to use this script -i IN.fasta -o out_translated.fasta 
python `translate_sequences.py` -i all_nt.fasta -o all_pep.fasta

#make a directory for the amino acid work. Keep this separte to the nt work
mkdir amino_acid_file


#move this file
`mv all_pep.fasta ./amino_acid_file`


#optional, re-format as fasta file. - as removes any duplicate, if you dont know where the data has come from 

python `rewrite_as_fasta.py` -i all_pep.fasta -o all_pep002.fasta


#move into this directory
cd amino_acid_file

# 3) use hmmsearch to identify any domains of interest. Hmm has to be in your path, or give it the full path to the binaries. 
# usage:
#hmmsearch --cut_ga (gathering threshold) --domain table out (we need it formatted like this) out_file_name   pfam_definition  in  amino_acid_file
hmmsearch --cut_ga --domtblout p.ensembl.20150928_vs_SBP.hmm.out SBP.hmm all_pep.fasta

# 4) extract the domains from the sequences, using the table generated by hmmsearch
python `get_DOMAIN_region_i_want_from_fasta_amino_acid.py` -i all_pep.fasta --hmm p.ensembl.20150928_vs_SBP.hmm.out -o p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.fasta

## IM going to filter then here as an extra step:


python `rewrite_as_fasta.py` -i p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.fasta -l 70 -o p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only_filtered.fasta



# 5) Aligned with muscle. - download the binary, your path will not be the same as mine!
~/Downloads/muscle3.8.31_i86linux64 -in p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only_filtered.fasta -out p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned

~/Downloads/muscle3.8.31_i86linux64 -in p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned -out p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned.refined.fasta -refine


#5b) can align back to the hmm profile used, e.g. SBP.hmm

# Usage: hmmalign [-options] <hmmfile> <seqfile>

hmmalign SBP.hmm p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.fasta -o p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.stockholm
# I also filtered these to remove partial domains, based on 3 X the threshold for the amino acid filtering.

python `rewrite_as_fasta.py` -i .fasta -l 210 -o filtered.fasta


# 5c) convert that stockholme file to fasta - use the file 

python `convert_stock_to_fasta.py` 

########################################################################################################
#6) now we need to get the nt seq of the domains to back translate those onto the AA alignment


python `get_DOMAIN_region_I_want_from_fasta_Nucleotide.py` -i ../all_nt.fasta --hmm p.ensembl.20150928_vs_SBP.hmm.out -o test_nt.out

#6b) remove those smaller domains sequences that will alter the aligmnet - this can be done at the AA or nt part of method:
# -l is min length of seq allowed to be printed out the the file. 

python rewrite_as_fasta.py -i p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned.refined.fasta -l 70 -o p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.refined_filtered.fasta



###############################################################################################################
#7) back translate the nt domain seq on the aligned proteins sequences - script from P. Cock James Hutton Institute

# 
python `Align_back_translate_Aug2014.py`


#Alter this section of the script accordingly:

#align_format = "fasta" #could be clustal
#prot_align_file = "p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned.refined.fasta"
#nuc_fasta_file = "nt_domains_filtered.fasta"
#nuc_align_file = "p.ensembl.20150928_vs_SBP.hmm.DOMAIN_ONLY_only.aligned.refined_backtranslated.fasta"
#table = 1



